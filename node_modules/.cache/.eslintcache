[{"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/index.js":"1","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/App.js":"2","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Searchbar.js":"3","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/SearchResults.js":"4","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/MetaInfo.js":"5","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Track.js":"6","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/BottomNav.js":"7"},{"size":255,"mtime":1674406542000,"results":"8","hashOfConfig":"9"},{"size":171,"mtime":1674406542000,"results":"10","hashOfConfig":"9"},{"size":2971,"mtime":1674846323457,"results":"11","hashOfConfig":"9"},{"size":3730,"mtime":1674846082530,"results":"12","hashOfConfig":"9"},{"size":1254,"mtime":1674837722871,"results":"13","hashOfConfig":"9"},{"size":1722,"mtime":1674766865983,"results":"14","hashOfConfig":"9"},{"size":782,"mtime":1674843021940,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1opvelh",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/index.js",[],[],[],"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/App.js",[],[],"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Searchbar.js",[],[],"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/SearchResults.js",["40","41"],[],"import React, { useEffect, useState } from \"react\";\nimport MetaInfo from \"./MetaInfo\";\nimport BottomNav from \"./BottomNav\";\n\nconst SearchResults = ({ results, setResults }) => {\n  const [addedTracks, setAddedTracks] = useState([]);\n  const [showResults, setShowResults] = useState(true);\n  const [showMetaInfo, setShowMetaInfo] = useState(false);\n  const [nextResults, setNextResults] = useState(results[0].next);\n\n  let audio = new Audio();\n\n  let portrait = window.matchMedia(\"(orientation: portrait)\");\n\n  const deleteTrack = (id) => {\n    setAddedTracks(addedTracks.filter((track) => track.id !== id));\n  };\n\n  const goToSearch = () => {\n    setShowResults(true);\n    setShowMetaInfo(false);\n  };\n\n  const goToData = () => {\n    setShowResults(false);\n    setShowMetaInfo(true);\n  };\n\n  const getNext = async () => {\n    if (nextResults) {\n      await fetch(\"/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": \"true\",\n          \"Access-Control-Allow-Methods\": \"POST\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n        },\n        body: JSON.stringify({ track: nextResults }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setResults(data);\n          setNextResults(data[0].next);\n        });\n    }\n  };\n\n  const titles = results.map((track) => {\n    return (\n      <React.Fragment key={track.id}>\n        <li key={track.id}>\n          <div className='flex-container-tracks-sb'>\n            {window.innerHeight > window.innerWidth ? (\n              <span className='artist-and-title'>\n                {track.artists.length > 1\n                  ? `${track.artists[0].name}  ft... - `\n                  : `${track.artists[0].name}  - `}\n                {track.title.length > 20\n                  ? track.title.slice(0, 19) + \"...\"\n                  : track.title}\n              </span>\n            ) : (\n              <span className='artist-and-title'>\n                {track.artists.length > 1\n                  ? `${track.artists[0].name}  ft... - `\n                  : `${track.artists[0].name}  - `}\n                {track.title}\n              </span>\n            )}\n            <div>\n              <button\n                className='btn-play'\n                onClick={() => {\n                  if (audio.src !== track.preview) {\n                    audio.src = track.preview;\n                  }\n                  audio.paused ? audio.play() : audio.pause();\n                }}\n              >\n                {\">||\"}\n              </button>\n\n              <button\n                className='btn-add-track'\n                onClick={() => {\n                  if (!addedTracks.includes(track)) {\n                    setAddedTracks([...addedTracks, track]);\n                  }\n                }}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <>\n      <div className='flex-container-tracks'>\n        <section className='results-section'>\n          {showResults && (\n            <>\n              <h2 className='track-results-header'>Preview and Add Tracks</h2>\n              <button className='btn-next' onClick={getNext}>\n                Next 20\n              </button>\n              <ul className='track-results-list'>{titles}</ul>\n            </>\n          )}\n        </section>\n      </div>\n      {showMetaInfo && (\n        <MetaInfo addedTracks={addedTracks} deleteTrack={deleteTrack} />\n      )}\n      <BottomNav search={goToSearch} data={goToData} />\n    </>\n  );\n};\n\nexport default SearchResults;\n","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/MetaInfo.js",[],[],"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Track.js",["42"],[],"import React, { useState, useEffect } from \"react\";\n\nconst Track = (props) => {\n  const [apiData, setApiData] = useState(\"\");\n\n  const getData = async () => {\n    await fetch(\"/analysis\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Methods\": \"POST\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n      },\n      body: JSON.stringify({ track: props.id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setApiData(data);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const keyConverter = {\n    0: \"C\",\n    1: \"C#\",\n    2: \"D\",\n    3: \"E♭\",\n    4: \"E\",\n    5: \"F\",\n    6: \"F#\",\n    7: \"G\",\n    8: \"G#\",\n    9: \"A\",\n    10: \"B♭\",\n    11: \"B\",\n  };\n\n  let artists = [];\n  props.artists.forEach((artist) => artists.push(artist.name));\n  const artistList = artists.join(\", \");\n\n  return (\n    <tr key={props.id}>\n      <td>\n        <button\n          className='btn-delete-track'\n          onClick={() => props.deleteTrack(props.id)}\n        >\n          -\n        </button>\n      </td>\n      <td>{artistList}</td>\n      <td>{`${\n        props.title.length > 30 ? props.title.slice(0, 29) + \"...\" : props.title\n      }`}</td>\n      <td>{`${Math.floor(\n        Math.round(apiData.duration_ms / 1000 / 60)\n      )}:${Math.round(apiData.duration_ms / 1000)}`}</td>\n      <td>{apiData.bpm}</td>\n      <td>{keyConverter[apiData.key]}</td>\n      <td>{Math.round(apiData.energy * 100) + \"%\"}</td>\n      <td>{Math.round(apiData.danceability * 100) + \"%\"}</td>\n    </tr>\n  );\n};\nexport default Track;\n","/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/BottomNav.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":13,"column":7,"nodeType":"45","messageId":"46","endLine":13,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":26,"column":6,"nodeType":"50","endLine":26,"endColumn":8,"suggestions":"51"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'portrait' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["52"],{"desc":"53","fix":"54"},"Update the dependencies array to be: [getData]",{"range":"55","text":"56"},[692,694],"[getData]"]