{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Track.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Track = props => {\n  _s();\n  const [apiData, setApiData] = useState(\"\");\n  const getData = async () => {\n    await fetch(\"/analysis\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Methods\": \"POST\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n      },\n      body: JSON.stringify({\n        track: props.id\n      })\n    }).then(res => res.json()).then(data => {\n      setApiData(data);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const keyConverter = {\n    0: \"C\",\n    1: \"C#\",\n    2: \"D\",\n    3: \"E♭\",\n    4: \"E\",\n    5: \"F\",\n    6: \"F#\",\n    7: \"G\",\n    8: \"G#\",\n    9: \"A\",\n    10: \"B♭\",\n    11: \"B\"\n  };\n  let artists = [];\n  props.artists.forEach(artist => artists.push(artist.name));\n  const artistList = artists.join(\", \");\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-delete-track\",\n        onClick: () => props.deleteTrack(props.id),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: artistList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: `${props.title.length > 30 ? props.title.slice(0, 29) + \"...\" : props.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: `${Math.floor(Math.round(apiData.duration_ms / 1000 / 60))}:${Math.round(apiData.duration_ms / 1000)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: apiData.bpm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: keyConverter[apiData.key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: Math.round(apiData.energy * 100) + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: Math.round(apiData.danceability * 100) + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, props.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Track, \"UNhZ8xF6Q/WKJJaPY/M9ZUwCC88=\");\n_c = Track;\nexport default Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["React","useState","useEffect","Track","props","apiData","setApiData","getData","fetch","method","headers","body","JSON","stringify","track","id","then","res","json","data","keyConverter","artists","forEach","artist","push","name","artistList","join","deleteTrack","title","length","slice","Math","floor","round","duration_ms","bpm","key","energy","danceability"],"sources":["/Users/shaun/Documents/dev/JavaScript/apps/spotify/src/components/Track.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Track = (props) => {\n  const [apiData, setApiData] = useState(\"\");\n\n  const getData = async () => {\n    await fetch(\"/analysis\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": \"true\",\n        \"Access-Control-Allow-Methods\": \"POST\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n      },\n      body: JSON.stringify({ track: props.id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setApiData(data);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const keyConverter = {\n    0: \"C\",\n    1: \"C#\",\n    2: \"D\",\n    3: \"E♭\",\n    4: \"E\",\n    5: \"F\",\n    6: \"F#\",\n    7: \"G\",\n    8: \"G#\",\n    9: \"A\",\n    10: \"B♭\",\n    11: \"B\",\n  };\n\n  let artists = [];\n  props.artists.forEach((artist) => artists.push(artist.name));\n  const artistList = artists.join(\", \");\n\n  return (\n    <tr key={props.id}>\n      <td>\n        <button\n          className='btn-delete-track'\n          onClick={() => props.deleteTrack(props.id)}\n        >\n          -\n        </button>\n      </td>\n      <td>{artistList}</td>\n      <td>{`${\n        props.title.length > 30 ? props.title.slice(0, 29) + \"...\" : props.title\n      }`}</td>\n      <td>{`${Math.floor(\n        Math.round(apiData.duration_ms / 1000 / 60)\n      )}:${Math.round(apiData.duration_ms / 1000)}`}</td>\n      <td>{apiData.bpm}</td>\n      <td>{keyConverter[apiData.key]}</td>\n      <td>{Math.round(apiData.energy * 100) + \"%\"}</td>\n      <td>{Math.round(apiData.danceability * 100) + \"%\"}</td>\n    </tr>\n  );\n};\nexport default Track;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}